@model IEnumerable<eMart.Models.Category>
@addTagHelper*, Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@{
    ViewData["Title"] = localizer["Title"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-4">
    <partial name="_notify" />

    <!-- Page Title and Add Button -->
    <div class="row align-items-center mb-4">
        <div class="col-md-6">
            <h2 class="text-primary">@localizer["Title"]</h2>
        </div>
        <div class="col-md-6 text-end">
            <a asp-action="InsertorEdit" class="btn btn-success">
                <i class="bi bi-plus-square"></i> @localizer["AddItem"]
            </a>
        </div>
    </div>

    <!-- Table to List Categories -->
    <div class="table-responsive">
        <table id="tbllist" class="table table-hover table-striped align-middle">
            <thead class="table-primary">
                <tr>
                    <th width="35%">@localizer["Name"]</th>
                    <th width="15%">@localizer["SubCategories"]</th>
                    <th width="30%">@localizer["Image"]</th>
                    <th width="20%" class="text-center">@localizer["Actions"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var m in Model)
                {
                    <tr>
                        <td scope="row" class="align-middle">@m.Name</td>
                        <td class="align-middle">
                            <ul class="list-unstyled">
                                @if (m.SubCategories != null)
                                {
                                    foreach (var s in m.SubCategories)
                                    {
                                        <li>
                                            <span class="badge bg-secondary">@s.Name</span>
                                        </li>
                                    }
                                }
                            </ul>
                        </td>
                        <td class="align-middle">
                            <img src="@m.ImgSrc" class="img-thumbnail" style="width: 80px;" />
                        </td>
                        <td class="text-center align-middle">
                            <a asp-action="InsertorEdit" asp-route-id="@m.Id" class="btn btn-success btn-sm">
                                <i class="bi bi-pencil-square"></i> @localizer["Edit"]
                            </a>
                            <a asp-action="Delete" asp-route-id="@m.Id" class="btn btn-danger btn-sm delete-item">
                                <i class="bi bi-trash-fill"></i> @localizer["Delete"]
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- DataTables Integration -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css">
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>

    <script type="text/javascript">

        // Select all <th> elements
        let headers = document.querySelectorAll('th');

        // Create an array to store the content of the headers
        let headerContents = [];
        headers.forEach(header => {
            var column = { title: header.textContent.trim() }
            headerContents.push(column);
        });

        var js = jQuery.noConflict(true);
        js(document).ready(function () {
            js('#tbllist').DataTable({
                "paging": true,
                "searching": true,
                "ordering": true,
                "info": true,
                columns: headerContents
            });
        });
    </script>
</div>

@section Scripts {
    <!-- SweetAlert for Delete Confirmation -->
    <script>
        document.querySelectorAll('.delete-item').forEach(item => {
            item.addEventListener('click', function (event) {
                event.preventDefault();

                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn btn-success',
                        cancelButton: 'btn btn-danger'
                    },
                    buttonsStyling: false
                });

                swalWithBootstrapButtons.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'No, cancel!',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = this.href;
                    }
                });
            });
        });
    </script>
}
